#include "name.h"

#include <iostream>
#include <vector>
#include <string>
#include <random>
#include <ctime>
#include <codecvt>
#include <locale>
#include <fstream>
#include <sstream>


using namespace std;

ChineseNameGenerator::ChineseNameGenerator() {
    InitializeSurnames();
    InitializeNames();
}

// 初始化姓氏列表
void ChineseNameGenerator::InitializeSurnames() {
    surnames = {
        "王", "李", "张", "刘", "陈", "杨", "赵", "黄", "周", "吴",
        "徐", "孙", "胡", "朱", "高", "林", "何", "郭", "马", "罗",
        "梁", "宋", "郑", "谢", "韩", "唐", "冯", "于", "董", "萧",
        "程", "曹", "袁", "邓", "许", "傅", "沈", "曾", "彭", "吕",
        "苏", "卢", "蒋", "蔡", "贾", "丁", "魏", "薛", "叶", "阎",
        "余", "潘", "杜", "戴", "夏", "钟", "汪", "田", "任", "姜",
        "范", "方", "石", "姚", "谭", "廖", "邹", "熊", "金", "陆",
        "郝", "孔", "白", "崔", "康", "毛", "邱", "秦", "江", "史",
        "顾", "侯", "邵", "孟", "龙", "万", "段", "雷", "钱", "汤",
        "尹", "黎", "易", "常", "武", "乔", "贺", "赖", "龚", "文",
        "庞", "樊", "兰", "殷", "施", "陶", "洪", "翟", "安", "颜",
        "倪", "严", "牛", "温", "芦", "季", "俞", "章", "鲁", "葛",
        "伍", "韦", "申", "尤", "毕", "聂", "丛", "焦", "向", "柳",
        "邢", "路", "岳", "齐", "沿", "梅", "莫", "庄", "辛", "管",
        "祝", "左", "涂", "谷", "祁", "时", "舒", "耿", "牟", "卜",
        "路", "詹", "关", "苗", "凌", "费", "纪", "靳", "盛", "童",
        "欧", "甄", "项", "曲", "成", "游", "阳", "裴", "席", "卫",
        "查", "屈", "鲍", "位", "覃", "霍", "翁", "隋", "植", "甘",
        "景", "薄", "单", "包", "司", "柏", "宁", "柯", "阮", "桂",
        "闵", "欧阳", "解", "强", "柴", "华", "车", "冉", "房", "边",
        "辜", "吉", "饶", "刁", "瞿", "戚", "丘", "古", "米", "池",
        "滕", "晋", "苑", "邬", "臧", "畅", "宫", "来", "嵺", "苟",
        "全", "褚", "廉", "简", "娄", "盖", "符", "奚", "木", "穆",
        "党", "燕", "郎", "邸", "冀", "谈", "姬", "屠", "连", "郜",
        "晏", "栾", "郁", "商", "蒙", "计", "喻", "揭", "窦", "迟",
        "宇", "敖", "糜", "鄢", "冷", "卓", "花", "仇", "艾", "蓝"
    };
}

// 初始化名字列表
void ChineseNameGenerator::InitializeNames() {
    maleNames = {
        "伟", "强", "勇", "军", "磊", "洋", "超", "健", "明", "涛",
        "鹏", "华", "亮", "刚", "杰", "峰", "建", "波", "浩", "凯",
        "帅", "晨", "龙", "阳", "剑", "博", "飞", "达", "宏", "斌",
        "辉", "昊", "栋", "锋", "睿", "彬", "旭", "豪", "翔", "坤",
        "诚", "清", "伦", "勋", "铭", "扬", "皓", "越", "渊", "楠",
        "祺", "航", "宇", "涵", "辰", "奕", "霖", "煊", "宸", "昱",
        "轩", "贤", "智", "楷", "远", "弘", "松", "哲", "瀚", "圣",
        "云", "懿", "维", "风", "运", "晟", "佑", "炫", "舟", "南",
        "岩", "野", "祥", "仁", "雨", "世", "昌", "翰", "泰", "泽",
        "民", "鸣", "志", "树", "林", "森", "朴", "梁", "柯", "桂",
        "业", "果", "猛", "威", "彪", "雄", "武", "胜", "力", "壮",
        "山", "海", "河", "江", "川", "岳", "石", "铁", "金", "锐",
        "利", "战", "斗", "霸", "王", "帝", "君", "将", "帅", "毅",
        "决", "行", "动", "跃", "腾", "升", "起", "冲", "闯", "奔"
    };

    femaleNames = {
        "芳", "娜", "敏", "静", "丽", "艳", "娟", "玲", "霞", "燕",
        "颖", "洁", "琳", "婷", "莹", "欣", "琼", "倩", "慧", "琪",
        "瑜", "梅", "雪", "蕾", "雯", "怡", "璇", "妍", "玥", "璐",
        "娅", "琦", "晶", "瑶", "蓓", "仪", "荷", "丹", "蓉", "君",
        "琴", "蕊", "薇", "菁", "梦", "苑", "婕", "馨", "韵", "园",
        "艺", "卿", "聪", "澜", "纯", "昭", "冰", "爽", "羽", "希",
        "宁", "飘", "滢", "柔", "竹", "凝", "晓", "欢", "芸", "菲",
        "寒", "伊", "亚", "宜", "可", "舒", "影", "思", "秀", "英",
        "华", "巧", "美", "淑", "惠", "珠", "翠", "雅", "芝", "玉",
        "萍", "红", "娥", "芬", "彩", "春", "菊", "兰", "凤", "素",
        "莲", "真", "环", "爱", "妹", "香", "月", "莺", "媛", "瑞"
    };

    neutralNames = {
        "安", "宁", "睿", "悦", "乐", "佳", "子", "思", "晓", "凡",
        "嘉", "宇", "晨", "雨", "欣", "梓", "涵", "梦", "云", "阳",
        "文", "笑", "一", "心", "亦", "若", "凌", "之", "景", "清",
        "秋", "诗", "灵", "白", "忆", "元", "初", "平", "寒", "问",
        "雁", "夜", "山", "如", "南", "书", "寻", "千", "风", "尔",
        "友", "谷", "以", "念", "冷", "依", "碧", "惜", "静", "度",
        "新", "笑", "怀", "天", "从", "语", "烟", "访", "落", "翠",
        "欲", "闲", "惊", "眠", "听", "然", "辰", "奕", "霖", "昊",
        "智", "渊", "瑞", "云", "诚", "维", "运", "琪", "佑", "炫",
        "南", "瑾", "遥", "仁", "韵", "辉", "玮", "光", "和", "平",
        "顺", "利", "通", "达", "显", "扬", "发", "展", "开", "放"
    };
}

int nameCdf(int sample, int max) {
    float s = (sample + GetRandom(100) / 100.0f) / max;
    return powf(s, 2) * max;
}

string ChineseNameGenerator::GenerateName(bool male, bool female, bool neutral) {
    string surname = surnames[GetRandom(surnames.size(), nameCdf)];

    string givenName;
    vector<int> nameList;

    nameList.push_back(male ? maleNames.size() : 0);
    nameList.push_back(female ? femaleNames.size() : 0);
    nameList.push_back(neutral ? neutralNames.size() : 0);

    int nameLength = 1 + (bool)GetRandom(9);
    int listLength = nameList[0] + nameList[1] + nameList[2];

    if (listLength == 0) {
        neutral = true;
        nameList[2] = neutralNames.size();
        listLength = neutralNames.size();
    }

    for (int i = 0; i < nameLength; ++i) {
        int idx = GetRandom(listLength);
        if (idx < nameList[0]) {
            givenName += maleNames[idx];
        }
        else {
            idx -= nameList[0];
            if (idx < nameList[1]) {
                givenName += femaleNames[idx];
            }
            else {
                idx -= nameList[1];
                givenName += neutralNames[idx];
            }
        }
    }

    return surname + givenName;
}